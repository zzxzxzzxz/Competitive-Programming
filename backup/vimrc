set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" easy motion
Plugin 'easymotion/vim-easymotion'

" python pep8 indent
Plugin 'Vimjas/vim-python-pep8-indent'

" YCM
Plugin 'valloric/youcompleteme'

" nerd commenter
Plugin 'scrooloose/nerdcommenter'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

syntax on

colorscheme ir_black
set undofile

set ruler
set number
set hlsearch
set background=dark
set backspace=indent,eol,start

set tabstop=4
set shiftwidth=4
set smarttab
set expandtab

" un-highlight by space
noremap <silent> <Space> :silent noh<Bar>echo<CR>

" indent for filetypes
autocmd FileType proto setlocal ts=2 sw=2
autocmd FileType make setlocal noexpandtab
autocmd FileType c,cpp,rust,go setlocal autoindent smartindent

" last position
autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

" remove unwanted spaces
autocmd BufWritePre * %s/\s\+$//e

" paste / nopaste
noremap <F2> :set invpaste paste?<CR>

" clipboard
set clipboard=unnamed

" auto add closing brace
inoremap {<CR> {<CR>}<C-o>O
inoremap [<CR> [<CR>]<C-o>O
inoremap (<CR> (<CR>)<C-o>O

" back to normal mode by jk
inoremap qq <ESC>

" YouCompleteMe
let g:ycm_global_ycm_extra_conf='~/.ycm_extra_conf.py'
let g:ycm_show_diagnostics_ui = 0
let g:ycm_key_invoke_completion = '<C-Space>'
let g:ycm_confirm_extra_conf=0
let g:ycm_server_python_interpreter = 'python3'
let g:ycm_min_num_of_chars_for_completion = 2
"let g:ycm_auto_trigger = 0
nnoremap <leader>D :YcmCompleter GoToDefinition<CR>
nnoremap <leader>d :YcmCompleter GoToDeclaration<CR>
nnoremap <leader>r :YcmCompleter GoToReferences<CR>
nnoremap K :YcmCompleter GetDoc<CR><C-W><C-K>
set completeopt-=preview

" easy motion
map <Leader> <Plug>(easymotion-prefix)
map <Leader>s <Plug>(easymotion-sn)
map f <Plug>(easymotion-lineforward)
map F <Plug>(easymotion-linebackward)

" nerd commenter
let g:NERDDefaultAlign = 'left'
let g:NERDCommentEmptyLines = 1
map <silent> c :call NERDComment(0,"toggle")<CR>
